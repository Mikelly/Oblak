@using Oblak.Models.Api;
@using Oblak.Models.EFI;

@{
    var sl = ViewBag.MunicipalityCodeList as SelectList;
    var tl = ViewBag.TypeCodeList as SelectList;
    var ssl = ViewBag.StatusList as SelectList; 
    var le = (int?)ViewBag.LegalEntity;
    var cntr = (string)ViewBag.Country ?? "MNE";
    var partial = ViewBag.Partial;
    if (partial == false)
    {
        ViewBag.Title = "Smještajni objekti";
        Layout = "~/Views/Shared/_LayoutINV.cshtml";
    }
}

<script type="text/javascript">  

    function loadProperties() {
        $.ajax({
            url: `/Property/FetchPropertiesExternal?legalEntity=${le}`,
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                if (data.success) {
                    Swal.fire({icon: 'success', title: 'Smještajni objekti su uspješno preuzeti.', confirmButtonText: 'U redu' });
                    var grid = $("#propertiesGrid").data("kendoGrid");
                    grid.dataSource.read();
                } else {
                    Swal.fire({ icon: 'error', title: 'Došlo je do greške prilikom preuzimanja smještajnih objekata.', confirmButtonText: 'U redu' });
                }
            },
            error: function (error) {
                Swal.fire({ icon: 'error', title: 'Došlo je do greške prilikom preuzimanja smještajnih objekata.', confirmButtonText: 'U redu' });
            }
        });
    }


    function newProperty(e) {
        var grid = $("#propertiesGrid").data("kendoGrid");
        grid.addRow();
    }


    function fiscal() {

        var grid = $('#propertiesGrid').data('kendoGrid');
        var item = grid.dataItem(grid.select());

        if (item == null) Swal.fire({ icon: 'error', title: 'Morate odabrati smještajni objekat', confirmButtonText: `U redu` });

        var prop = item.Id;

        $.ajax({
            url: `/fiscal-enu?property=${prop}`,
            type: 'GET',
            success: function (data, status, xhr) {
                var wnd = $("#wndFiscal").data("kendoWindow");
                wnd.content(data);
                wnd.center().open();
            }
        });
    }

    function setFiscal() {

        $.ajax({
            url: `/fiscal-enu`,
            type: 'POST',
            data: $('#frmFiscal').serialize(),
            success: function (data, status, xhr) {
                if (data.error != "") {
                    Swal.fire({ icon: 'error', title: data.error, confirmButtonText: `U redu` });
                }
                else {
                    $("#wndFiscal").data("kendoWindow").close();
                }
            }
        });
    }

    function propertyEdit(e) {
        //var container = e.container;
        var model = e.model;
        

        var municipalityDropDown = $("[name='MunicipalityId']").data("kendoDropDownList");
        if (municipalityDropDown) { 
            municipalityDropDown.value(model.MunicipalityId);

            municipalityDropDown.trigger("change");
        }
         
        setTimeout(function() {
            var placeDropDown = $("[name='Place']").data("kendoDropDownList");
            if (placeDropDown) {
                placeDropDown.dataSource.fetch().then(function () {
            placeDropDown.value(model.Place);
        });
            }
        }, 300);
    }

    function cascadePlace(e) {
        debugger;
    }

    function opstinaChanged(e) {

        var placeDropDown = $("[name='Place']").data("kendoDropDownList");
        if (placeDropDown) {
            placeDropDown.dataSource.read();
            placeDropDown.select(0);
        }
    }

    function filterMjesta() {

            var municipalityDropDown = $("[name='MunicipalityId']").data("kendoDropDownList");
            if (municipalityDropDown) {
            var selectedItem = municipalityDropDown.dataItem(municipalityDropDown.select());
            return {
                opstina: selectedItem ? selectedItem.Value : null
            };
        }

        return { opstina: null };
    }

</script>

<div style="position:absolute; top:@(partial ? 15 : 25)px; bottom: 15px; left: 15px; right:15px;">
    @(Html.Kendo().Button().Name("btnLoadProperties")
        .HtmlAttributes(new { type = "button", onclick = "loadProperties()", style = "height:95px; width:95px; margin-right:10px; cursor:pointer;" })
        .Content(@"<div style='width:100%;height:100%;text-align:center; align-items:center;'>
    <img style='width:50px;height:50px;text-align:center;display:block;margin-left:auto;margin-right:auto;' src='/Content/Icons/hotel.png'/>
    <div style='font-weight:bold;display:block;position:relative;top:5px;line-height:110%;font-size:90%'>UČITAJ<br/>OBJEKTE<div>
    </div>"))

    @(Html.Kendo().Button().Name("btnNewProperty")
        .HtmlAttributes(new { type = "button", onclick = "newProperty()", style = "height:95px; width:95px; margin-right:10px; cursor:pointer;" })
        .Content(@"<div style='width:100%;height:100%;text-align:center; align-items:center;'>
    <img style='width:50px;height:50px;text-align:center;display:block;margin-left:auto;margin-right:auto;' src='/Content/Icons/building.png'/>
    <div style='font-weight:bold;display:block;position:relative;top:5px;line-height:110%;font-size:90%'>NOVI<br/>OBJEKAT<div>
    </div>"))

    @(Html.Kendo().Button().Name("btnFiscal")
        .HtmlAttributes(new { type = "button", onclick = "fiscal()", style = "height:95px; width:95px; margin-right:10px; cursor:pointer;" })
        .Content(@"<div style='width:100%;height:100%;text-align:center; align-items:center;'>
    <img style='width:48px;height:48px;text-align:center;display:block;margin-left:auto;margin-right:auto;margin-top:2px;' src='/Content/Icons/cash_register.png'/>
    <div style='font-weight:bold;display:block;position:relative;top:5px;line-height:110%;font-size:90%'>FISKALNI<br/>PODACI<div>
    </div>"))
</div>

<div style="position:absolute; top:@(partial ? 120 : 130)px; bottom: 15px; left: 15px; right:15px;">
    @(Html.Kendo().Grid<PropertyEnrichedDto>()
        .Name("propertiesGrid")
        .Columns(columns =>
        {
            columns.Command(command =>
            {
                command.Edit().Text(" ").UpdateText(" ").CancelText(" ");
                @* command.Destroy().Text(" "); *@
            })
            .Width(70);

            columns.Bound(g => g.Id).Title("ID").Width(110).ClientTemplate("#= Id #").HtmlAttributes(new { style = "pointer-events:none;" });
            columns.Bound(g => g.ExternalId).Title("Šifra").Width(110);
            columns.Bound(g => g.Name).Title("Naziv").Width(250); 
            columns.ForeignKey(g => g.MunicipalityId, (SelectList)ViewBag.Opstine, "Value", "Text").Title("Opština").Width(200).EditorTemplateName("Opstina");
            columns.ForeignKey(g => g.Place, (SelectList)ViewBag.Places, "Value", "Text").Title("Mjesto").Width(200).EditorTemplateName("Mjesto");
            columns.Bound(g => g.Address).Title("Adresa").Width(100);
            columns.Bound(g => g.RegNumber).Title("Broj registr").Width(150);
            columns.Bound(g => g.RegDate).Title("Datum registr").Format("{0:dd.MM.yyyy}").EditorTemplateName("Date").Width(150);
            columns.ForeignKey(g => g.Type, tl).Title("Vrsta").Width(250);
            columns.ForeignKey(g => g.Status, ssl).Title("Status").Width(110);
        })
        .Pageable(p => p.Refresh(true))
        .Sortable()
        .Selectable()
        .Scrollable()
        .Filterable()
        .Events(e => e.Edit("propertyEdit"))
        .HtmlAttributes(new { style = "height:100%;" })
        .Editable(editable => editable.Mode(GridEditMode.InLine))
        .DataSource(ds => ds
        .Ajax()
        .PageSize(20)
        .Model(m =>
        {
            m.Id(g => g.Id);
            m.Field(g => g.Id).Editable(false);
            m.Field(g => g.ExternalId).Editable(false);
            m.Field(g => g.RegNumber);
            m.Field(g => g.RegDate);
            m.Field(g => g.Name);
           //m.Field(g => g.PropertyName);
            m.Field(g => g.Address);
            m.Field(g => g.MunicipalityId);
            m.Field(g => g.Place);
            //m.Field(g => g.PaymentType);
            //m.Field(g => g.Price);
            //m.Field(g => g.Capacity);
            //m.Field(g => g.ResidenceTax);
            //m.Field(g => g.ResidenceTaxYN);
            m.Field(g => g.Status).DefaultValue("A");
        })
        .Create(a => a.Action("Create", "Property", new { legalEntity = le }))
        .Read(a => a.Action("Read", "Property", new { legalEntity = le }))
        .Update(a => a.Action("Update", "Property", new { legalEntity = le }))
        .Destroy(a => a.Action("Destroy", "Property", new { legalEntity = le }))
        )
        )
</div>


@(Html.Kendo().Window().Name("wndFiscal")
    .Title("Fiskalni podaci")
    .Visible(false)
    .Modal(true)
    .Draggable(false)
    .Width(400)
    .Height(600)
    .HtmlAttributes(new { style = "padding:20px; padding-bottom:10px; font-size:14px;" })
)