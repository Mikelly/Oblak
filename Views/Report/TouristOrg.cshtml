@{
	Layout = "~/Views/Shared/_LayoutINV.cshtml";
	var prtnid = (string)ViewBag.PartnerId;
	var reports = new Dictionary<string, string>() { 
		{ $"CountryStats", "Statistika po državama" },
		{ $"CountryStatsPeriod", "Statistika po državama za period" },
		{ $"GuestList", "Boravišne prijave za period" }, 
		{ $"GuestListByPlace", "Gosti po lokaciji" },
		{ $"PostOffice", "Izvještaj za poštu" },
		{ $"ResTax", "Naplata boravišne takse" },
		//{ $"ResTaxTotal", "Naplata boravisne takse - ukupno"},
		{ $"GuestBook", "Knjiga gostiju izdavaoca" },
		{ $"GuestBookPayments", "Knjiga gostiju sa plaćanjima" },
		{ $"LegalEntities", "Pregled izdavaoca" },
		{ $"Debt", "Pregled dugovanja" },
		{ $"TaxExemptions", "Oslobođenja od boravišne takse" },
		{ $"GuestHistory", "Istorija posjete gosta" },
		{ $"CountryStatsPeriodGuest", "Prijave po državama za period" },

	};

	if (prtnid == "4")
	{
		reports.Add($"Ledger", "Kartica izdavaoca"); 
	}

	if (User.IsInRole("TouristOrgAdmin"))
	{
		reports.Add($"ResTaxHistory", "Istorija izmjena");
	}

	if (prtnid == "4" && User.IsInRole("TouristOrgAdmin"))
	{
		reports.Add($"NbrGuestPerPC", "Broj prijava po računarima");
	}

	if ((string)ViewBag.TaxType == "E")
	{
		reports = new Dictionary<string, string>() {
			{ $"ExcursionTaxCash", "Naplata izletničke takse - Gotovina" },
			{ $"ExcursionTaxVoucher", "Naplata izletničke takse - Vaučeri" },
			{ $"ExcursionCountryStats", "Statistika izletnika po državama" },
			{ $"Excursion", "Pregled vaučera po agencijama" },
		};	
	}

	if ((string)ViewBag.TaxType == "M")
	{
		reports = new Dictionary<string, string>() {
			{ $"CountryMupStatsPeriod", "Statistika po državama" },
			{ $"CountryMupAgeStatsPeriod", "Statistika po izdavaocima" },
		};
	}

	if ((string)ViewBag.TaxType == "O")
	{
		reports = new Dictionary<string, string>() {			
			{ $"GuestBookPayments", "Knjiga gostiju sa plaćanjima" },			
			{ $"Debt", "Pregled dugovanja" },
			{ $"Ledger", "KarticaIzdavaoca" },
			{ $"GuestHistory", "Istorija posjete gosta" },
			{ $"PeriodicFiscal", "Periodični fiskalni izvještaj" },
			{ $"CountryStatsFirmaPeriod", "Broj noćenja i broj dolazaka po državama" },
		};
	}

	if ((string)ViewBag.TaxType == "N")
	{
		reports = new Dictionary<string, string>() {
			{ $"NauticalTax", "Naplata nautičke takse" },
		};
	}

	var resTaxGroups = new Dictionary<string, string>() { 
		{ $"CheckInPoint", "po punktu" },
		{ $"Operator", "po operatoru" },
		{ $"Place", "po naselju" },
	};

	var legalEntityStatuses = new Dictionary<string, string>() {
		{ $"Registered", "Registrovani" },
		{ $"Unregistered", "Neregistrovani" },
		{ $"All", "Svi izdavaoci" },
	};

	var formats = new Dictionary<string, string>() { { $"PDF", "PDF dokument" }, { $"XLSX", "Excel fajl" } };
	var admin = ViewBag.Admin;
}

<style type="text/css">

	.k-input-loading-icon {
		padding: 0px !important;
	}

</style>

<script type="text/javascript">
	
	var admin = '@admin';
	
	function setCred(e) {
		//e.preventDefault();
		$.ajax({
			url: '/srb-cred',
			type: 'POST',
			data: $('#frmSrbCred').serialize(),
			success: function (data) {
				$('#wndSrbCred').data('kendoWindow').close();
			},
			error: function () {

			}
		});
	}

	function reportChanged() { 
		$('.run').css('display','flex');	
		var prtnid = '@prtnid';
		$('.parameter').hide();
		var report = $('#report').val().replace(prtnid, '');
		
		if (report == "CountryStats") {
			$('#datum').show();
		}

		if (report == "CountryStatsPeriod" || report == "CountryStatsPeriodGuest") {
			$('#datumOd').show();
			$('#datumDo').show();	
		}

		if (report == "GuestList") {
			$('#datumOd').show();
			$('#datumDo').show();
			if (admin == 'True') {
				$('#checkInPoint').show();
				$('#user').show();
			}
		}

		if (report == "GuestListByPlace") {
			$('#datumOd').show();
			$('#datumDo').show();
		}

		if (report == "PostOffice") {
			$('#datum').show();
			$('#checkInPoint').show();
		}
		
		if (report == "ResTax" || report == "ResTaxTotal") {
			$('#datumOd').show();
			$('#datumDo').show();	
			$('#resTaxGroup').show();
		} 

		if (report == "GuestBook") {
			$('#datumOd').show();
			$('#datumDo').show();	
			$('#legalEntity').show();			
		}

		if (report == "GuestBookPayments") {
			$('#datumOd').show();
			$('#datumDo').show();	
			$('#legalEntity').show();			
		}

		if (report == "Ledger") {
			$('#datumOd').show();
			$('#datumDo').show();	
			$('#legalEntity').show();			
		}

		if (report == "LegalEntities") {
			$('#legalEntityType').show();
			$('#legalEntityStatus').show();
			$('#place').show();
			$('#datumOd').show();
			$('#datumDo').show();
		}

		if (report == "ExcursionTaxVoucher" || report == "ExcursionTaxCash") {						
			$('#datumOd').show();
			$('#datumDo').show();
		}

		if (report == "CountryMupStatsPeriod") {
			$('#datumOd').show();
			$('#datumDo').show();
		}

		if( report == "CountryMupAgeStatsPeriod"){
			$('#legalEntityName').show(); 
			$('#datumOd').show();
			$('#datumDo').show();
		}

		if (report == "TaxExemptions") {
			$('#datumOd').show();
			$('#datumDo').show();					
			$('#legalEntity').show();	
			$('#checkInPoint').show();
			$('#user').show();
		}
		if (report == "GuestHistory") {
			$('#firstName').show();
			$('#lastName').show();
			$('#documentNumber').show();			
		}

		if(report == "ResTaxHistory"){
			$('#datumOd').show();
			$('#datumDo').show();
		}

		if (report == "ExcursionCountryStats") {
			$('#datumOd').show();
			$('#datumDo').show();
		}
		if (report == "Excursion") {
			$('#agency').show();
			$('#datumOd').show();
			$('#datumDo').show();
		}

		if (report == "PeriodicFiscal"){
			$('#datumOd').show();
			$('#datumDo').show();
			$('#enuCode').show();
		}

		if(report == "NbrGuestPerPC"){
			$('#datumOd').show();
			$('#datumDo').show();
		}

		if(report == "NauticalTax"){
			$('#datumOd').show();
			$('#datumDo').show();
		}

		if(report == "CountryStatsFirmaPeriod"){
			$('#datumOd').show();
			$('#datumDo').show();
		} 

	}

	function runReport() {
		$('#freport').val($('#report').val());
		$('#fformat').val($('#reportFormat').val());

		$('#reportForm')[0].reset();

		$('#flegalEntityName').val($('#LegalEntityName').val());
		$('#fdate').val(kendo.toString($('#Date').data('kendoDatePicker').value(), 'ddMMyyyy'));
		$('#fdateFrom').val(kendo.toString($('#DateFrom').data('kendoDatePicker').value(), 'ddMMyyyy'));
		$('#fdateTo').val(kendo.toString($('#DateTo').data('kendoDatePicker').value(), 'ddMMyyyy'));
		$('#fcheckInPointId').val($('#CheckInPointId').val());
		$('#fuserName').val($('#UserName').val());		
		$('#fresTaxGroup').val($('#ResTaxGroup').val());
		$('#flegalEntity').val($('#LegalEntity').val());
		$('#flegalEntityStatus').val($('#LegalEntityStatus').val());
		$('#fplace').val($('#Place').val());
		$('#ftaxPaymentType').val($('#TaxPaymentType').val());
		$('#ffirstName').val($('#FirstName').val());
		$('#flastName').val($('#LastName').val());
		$('#fdocumentNumber').val($('#DocumentNumber').val()); 
		$('#fenuCode').val($('#ENUCode').val());

		$('#fagencyId').val($('#AgencyId').val());
		$('#flegalEntityType').val($('#LegalEntityType').val());

		$('#reportForm').submit();
	}
</script>

<style type="text/css">
	.parameter
	{
		margin-bottom:20px;
	}
</style>

<form target="_blank" action="/treport" method="post" id="reportForm">
	<input type="hidden" id="freport" name="report" />
	<input type="hidden" id="fformat" name="format" />
	<input type="hidden" id="flegalEntityName" name="legalEntityName" />
	<input type="hidden" id="fdate" name="date" />
	<input type="hidden" id="fdateFrom" name="dateFrom" />
	<input type="hidden" id="fdateTo" name="dateTo" />
	<input type="hidden" id="fcheckInPointId" name="checkInPointId" />
	<input type="hidden" id="fuserName" name="userName" />
	<input type="hidden" id="fresTaxGroup" name="resTaxGroup" />
	<input type="hidden" id="flegalEntity" name="legalEntity" />
	<input type="hidden" id="flegalEntityStatus" name="legalEntityStatus" />
	<input type="hidden" id="fplace" name="place" />
	<input type="hidden" id="ffirstName" name="firstName" />
	<input type="hidden" id="flastName" name="lastName" />
	<input type="hidden" id="fdocumentNumber" name="documentNumber" />
	<input type="hidden" id="fenuCode" name="enuCode" />
	<input type="hidden" id="ftaxPaymentType" name="taxPaymentType" />
	<input type="hidden" id="fagencyId" name="agencyId" />
	<input type="hidden" id="flegalEntityType" name="legalEntityType" />
</form>

<div style="width:400px; margin-left:auto; margin-right:auto; margin-top:50px; font-size:larger;">

	<div style="font-weight:bold;">
		Izaberite izvještaj
		@(Html.Kendo().DropDownList().Name("report")
			.HtmlAttributes(new { style = "font-weight:bold;"})
			.OptionLabel("Izaberite izvještaj")
			.AutoWidth(true)
			.Height(250)
			.BindTo(new SelectList(reports as Dictionary<string, string>, "Key", "Value"))
			.Events(e => e.Change("reportChanged"))		
		)
	</div>

	<br />
	<br />
	<br />

	<div class="parameter" style="display:none" id="legalEntity">
		Odaberite izdavaoca:
		@(Html.Kendo().MultiColumnComboBox()
				.Name("LegalEntity")
				.Placeholder("Izaberite izdavaoca")
				.DataTextField("Name")
				.DataValueField("Id")
				.Enable(true)
				.Columns(columns =>
				{
					columns.Add().Field("Name").Title("Naziv").Width("200px");
					columns.Add().Field("Address").Title("Adresa").Width("250px");
				})
				.HtmlAttributes(new { id = "LegalEntity", style = "width:100%;", autocomplete = "off", autocorrect = "off", autocapitalize = "off", spellcheck = "false" })
				.DropDownWidth("400px")
				.Messages(m => m.NoData("Nema podataka").Clear("Poništi"))
				.Filter("contains").FilterFields(new string[] { "Name" })
				.AutoBind(false)
				.MinLength(3)
				.DataSource(source => { source.Read(read => { read.Action("ReadAdmin", "LegalEntity"); }).ServerFiltering(true); })
				)
		<br />
	</div>

	<div class="parameter" style="display:none" id="legalEntityType">
		Odaberite tip stanodavca:
		@(Html.Kendo().DropDownList()
				.Name("LegalEntityType")
				.OptionLabel("Izaberite tip")
				.AutoWidth(true)
				.DataTextField("Text")
				.DataValueField("Value")
				.BindTo(new List<SelectListItem>
				{
				new SelectListItem { Text = "Firma", Value = "Company" },
				new SelectListItem { Text = "Fizičko lice", Value = "Person" }
				})
				)

		<br />
	</div>

	<div class="parameter" style="display:none" id="place">
		Odaberite naselje:
		@(Html.Kendo().DropDownList().Name("Place")
			.OptionLabel("Izaberite naselje")
			.AutoWidth(true)
			.BindTo(ViewBag.Places as List<CodeList>)
			.DataValueField("ExternalId")
			.DataTextField("Name")
			)
		<br />
	</div>

	<div class="parameter" style="display:none" id="taxPaymentType">
		Odaberite način plaćanja:
		@(Html.Kendo().DropDownList().Name("TaxPaymentType")
			.OptionLabel("Izaberite način plaćanja")
			.AutoWidth(true)
			.BindTo(ViewBag.TaxPayTypes as SelectList)
			)
		<br />
	</div>

	<div class="parameter" style="display:none" id="legalEntityStatus">
		Odaberite status izdavaoca:
		@(Html.Kendo().DropDownList().Name("LegalEntityStatus")
			.AutoWidth(true)
			.Height(250)
			.Value("All")
			.BindTo(new SelectList(legalEntityStatuses as Dictionary<string, string>, "Key", "Value"))
			)
		<br />
	</div>

	<div class="parameter" style="display:none" id="legalEntityName">
		Unesite ime i prezime / naziv:
		@(Html.Kendo().TextBox().Name("LegalEntityName"))
		<br />
	</div>

	<div class="parameter" style="display:none" id="datum">
		Unesite datum:
		@Html.Kendo().DatePicker().Name("Date").Value(DateTime.Now.Date)
		<br />
	</div>

	<div class="parameter" style="display:none" id="datumOd">
		Unesite početni datum:
		@Html.Kendo().DatePicker().Name("DateFrom").Value(DateTime.Now.Date)
		<br />
	</div>

	<div class="parameter" style="display:none" id="datumDo">
		Unesite krajnji datum:
		@Html.Kendo().DatePicker().Name("DateTo").Value(DateTime.Now.Date)
		<br />
	</div>

	<div class="parameter" style="display:none" id="checkInPoint">
		Izaberite punkt
		@(Html.Kendo().DropDownList().Name("CheckInPointId")
				.AutoWidth(true)
				.OptionLabel("Izaberite punkt")
				.BindTo(ViewBag.CheckInPoints as List<CheckInPoint>)				
				.DataValueField("Id")
				.DataTextField("Name")
				)
		<br />
	</div>

	<div class="parameter" style="display:none" id="resTaxGroup">
		Izaberite način prikaza
		@(Html.Kendo().DropDownList().Name("ResTaxGroup")
				.AutoWidth(true)
				.OptionLabel("Izaberite prikaz")
				.BindTo(new SelectList(resTaxGroups as Dictionary<string, string>, "Key", "Value"))
				)
		<br />
	</div>

	<div class="parameter" style="display:none" id="user">
		Izaberite radnika
		@(Html.Kendo().DropDownList().Name("UserName")
				.OptionLabel("Izaberite radnika")
				.AutoWidth(true)
				.BindTo(ViewBag.Users as SelectList)				
				)
		<br />
	</div>

	<div class="parameter" style="display:none" id="firstName">
		Unesite ime
		@(Html.Kendo().TextBox().Name("FirstName"))				
		<br />
	</div>

	<div class="parameter" style="display:none" id="lastName">
		Unesite prezime
		@(Html.Kendo().TextBox().Name("LastName"))
		<br />
	</div>

	<div class="parameter" style="display:none" id="documentNumber">
		Unesite broj dokumenta
		@(Html.Kendo().TextBox().Name("DocumentNumber"))
		<br />
	</div>

	<div class="parameter" style="display:none" id="enuCode">
		Šifra ENU
		@(Html.Kendo().TextBox().Name("ENUCode").Value(ViewBag.ENUCode))
		<br />
	</div>

	<div class="parameter" style="display:none" id="agency">
		Za agenciju
		@(Html.Kendo().DropDownList().Name("AgencyId")
				.DataValueField("Id")
				.DataTextField("Name")
				.Filter(FilterType.Contains)
				.DataSource(dataSource => dataSource.Read(read => read.Action("ReadAdmin", "Agency")))
				.OptionLabel("Izaberite agenciju")
				)
		<br />
	</div>

	<br />
	<br />

	<div class="run" style="display:none; align-items:center; align-content:center;">

		<div style="flex-basis:60%">
			Izaberite format
			@(Html.Kendo().DropDownList().Name("reportFormat")
						.AutoWidth(true)
						.BindTo(new SelectList(formats as Dictionary<string, string>, "Key", "Value"))
						)
		</div>

		<div style="flex-basis:40%; text-align:right;">
			@(Html.Kendo().Button().Name("btnRunReport")
				.HtmlAttributes(new { type = "button", onclick = "runReport()", style = "height:105px; width:105px; margin-right:0px; cursor:pointer;" })
				.Content(@"<div style='width:100%;height:100%;text-align:center; align-items:center;'>
					<img style='width:55px;height:55px;text-align:center;display:block;margin-left:auto;margin-right:auto;' src='/Content/Icons/print_invoice_color.png'/>
					<div style='font-weight:bold;display:block;position:relative;top:5px;line-height:110%;font-size:90%'>POKRENI<br/>IZVJEŠTAJ<div>
				</div>"))
		</div>

	</div>

</div>

