@using Oblak.Models.Api;
@using Oblak.Models.EFI;
@{
    ViewBag.Title = "Prijave gostiju";
    Layout = "~/Views/Shared/_LayoutINV.cshtml";
}

<script type="text/javascript">
    $(document).ready(function () {
        
        setTimeout(function () {
            console.log('initialize native messaging');
            window.postMessage({ type: "FROM_PAGE", message: { type: "Initialize" } }, "*");
        }, 500);
        
        $("#btnNewGuest").click(function () {
            $("#wndNewGuest").data("kendoWindow").center().open();
        });

        $("#btnSubmitNewGuest").click(function () {
            // Gather input values
            var propertyId = $("#property").data("kendoDropDownList").value();
            var isDomestic = $("#isdomestic").data("kendoDropDownList").value();
            var firstName = $("#firstname").val();
            var lastName = $("#lastname").val();
            var personalNumber = $("#personalnumber").val();
            var birthDate = $("#birthdate").data("kendoDatePicker").value();
            var gender = $("#gender").data("kendoDropDownList").value();
            var nationality = $("#nationality").data("kendoDropDownList").value();
            var birthPlace = $("#birthplace").val();
            var birthCountry = $("#birthCountry").data("kendoDropDownList").value();
            var residencePlace = $("#residencePlace").data("kendoDropDownList").value();
            var residenceCountry = $("#residenceCountry").data("kendoDropDownList").value();
            var residenceMunicipality = $("#residenceMunicipality").data("kendoDropDownList").value();
            var documentType = $("#documenttype").data("kendoDropDownList").value();
            var documentNumber = $("#documentnumber").val();
            var documentIssueDate = $("#documentissuedate").data("kendoDatePicker").value();
            var entryDate = $("#entrydate").data("kendoDatePicker").value();
            var entryPlace = $("#entryplace").data("kendoDropDownList").value();
            var visaType = $("#visatype").data("kendoDropDownList").value();
            var visaNumber = $("#visanumber").val();
            var visaIssuingPlace = $("#visaissueplace").val();
            var stayValidTo = $("#stayvalidto").data("kendoDatePicker").value();
            var note = $("#note").val();
            var reasonForStay = $("#reasonforstay").data("kendoDropDownList").value();
            var arrivalType = $("#arrivaltype").data("kendoDropDownList").value();
            var serviceType = $("#servicetype").data("kendoDropDownList").value();
            var checkInDate = $("#checkin").data("kendoDateTimePicker").value();
            var plannedCheckOutDate = $("#plannedcheckout").data("kendoDatePicker").value();
            var discountReason = $("#discountreason").data("kendoDropDownList").value();

            // Create DTO object
            var newGuestDto = {
                PropertyId: propertyId,
                IsDomestic: isDomestic,
                FirstName: firstName,
                LastName: lastName,
                PersonalNumber: personalNumber,
                BirthDate: birthDate,
                Gender: gender,
                Nationality: nationality,
                BirthPlace: birthPlace,
                BirthCountry: birthCountry,
                ResidencePlace: residencePlace,
                ResidenceCountry: residenceCountry,
                ResidenceMunicipality: residenceMunicipality,
                DocumentType: documentType,
                DocumentNumber: documentNumber,
                DocumentIssueDate: documentIssueDate,
                EntryDate: entryDate,
                EntryPlace: entryPlace,
                VisaType: visaType,
                VisaNumber: visaNumber,
                VisaIssuingPlace: visaIssuingPlace,
                StayValidTo: stayValidTo,
                Note: note,
                ReasonForStay: reasonForStay,
                ArrivalType: arrivalType,
                ServiceType: serviceType,
                CheckInDate: checkInDate,
                PlannedCheckOutDate: plannedCheckOutDate,
                DiscountReason: discountReason
            };


            // Call the controller method to save the new guest
            saveNewGuest(newGuestDto);
        });

        // Handle dropdown change event
        $("#isdomestic").change(function () {
            var isDomesticValue = $(this).val();
            toggleElements(isDomesticValue);
        });

        // Initial setup based on default value
        var initialIsDomesticValue = $("#isdomestic").val();
        toggleElements(initialIsDomesticValue);

        $(document).ready(function () {
            var residenceCountry = $("#residenceCountry").data("kendoDropDownList");
            var residenceMunicipality = $("#residenceMunicipality").data("kendoDropDownList");
            var residencePlace = $("#residencePlace").data("kendoDropDownList");
            var visaType = $("#visatype").data("kendoDropDownList");

            residenceCountry.bind("change", function () {
                var id = this.value();
                var selectedCountry = residenceCountry.dataItem();
                if (id && selectedCountry && selectedCountry.Param2 === 'SRB') {
                    $.ajax({
                        url: '@Url.Action("GetSrbMunicipalityList", "Person")',
                        type: 'GET',
                        success: function (data) {
                            residenceMunicipality.setDataSource(new kendo.data.DataSource({ data: data }));
                            residenceMunicipality.enable(true);
                        }
                    });
                } else {
                    residenceMunicipality.value("");
                    residenceMunicipality.enable(false);
                    residencePlace.value("");
                    residencePlace.enable(false);
                }
            });

            residenceMunicipality.bind("change", function () {
                var id = this.value();
                if (id) {
                    $.ajax({
                        url: '@Url.Action("GetSrbPlaceList", "Person")',
                        type: 'GET',
                        data: { municipalityId : id },
                        success: function (data) {
                            residencePlace.setDataSource(new kendo.data.DataSource({ data: data }));
                            residencePlace.enable(true);
                        }
                    });
                } else {
                    residencePlace.value("");
                    residencePlace.enable(false);
                }
            });

            visaType.bind("change", function () {
                var id = this.value(); // Assuming the selected value represents the ID of the visa type

                var visaNumber = $("#visanumber").getKendoTextBox();
                var visaIssuePlace = $("#visaissueplace").getKendoTextBox();

                if (id) {
                    // Enable the TextBoxes
                    visaNumber.enable(true);
                    visaIssuePlace.enable(true);
                } else {
                    // Clear and disable the TextBoxes
                    visaNumber.value("");
                    visaIssuePlace.value("");
                    visaNumber.enable(false);
                    visaIssuePlace.enable(false);
                }
            });
        });
    });

    function saveNewGuest(newGuestDto) 
    {
        var propertyId = $("#property").data("kendoDropDownList").value();
        var isDomestic = $("#isdomestic").data("kendoDropDownList").value();
        var firstName = $("#firstname").val();
        var lastName = $("#lastname").val();
        var personalNumber = $("#personalnumber").val();
        var birthDate = $("#birthdate").data("kendoDatePicker").value();
        var formattedBirthDate = kendo.toString(birthDate, "yyyy-MM-ddTHH:mm:ss");
        var gender = $("#gender").data("kendoDropDownList").value();
        var nationality = $("#nationality").data("kendoDropDownList").dataItem();
        var birthPlace = $("#birthplace").val();
        var birthCountry = $("#birthCountry").data("kendoDropDownList").dataItem();
        var residencePlace = $("#residencePlace").data("kendoDropDownList").dataItem();
        var residencePlaceValue = $("#residencePlace").data("kendoDropDownList").value();
        var residenceCountry = $("#residenceCountry").data("kendoDropDownList").dataItem();
        var residenceMunicipality = $("#residenceMunicipality").data("kendoDropDownList").dataItem();
        var residenceMunicipalityValue = $("#residenceMunicipality").data("kendoDropDownList").value();
        var documentType = $("#documenttype").data("kendoDropDownList").value();
        var documentNumber = $("#documentnumber").val();
        var documentIssueDate = $("#documentissuedate").data("kendoDatePicker").value();
        var formattedDocumentIssueDate = kendo.toString(documentIssueDate, "yyyy-MM-ddTHH:mm:ss");
        var entryDate = $("#entrydate").data("kendoDatePicker").value();
        var formattedEntryDate = kendo.toString(entryDate, "yyyy-MM-ddTHH:mm:ss");
        var entryPlace = $("#entryplace").data("kendoDropDownList").dataItem();
        var entryPlaceValue = $("#entryplace").data("kendoDropDownList").value();
        var visaType = $("#visatype").data("kendoDropDownList").value();
        var visaNumber = $("#visanumber").val();
        var visaIssuingPlace = $("#visaissueplace").val();
        var stayValidTo = $("#stayvalidto").data("kendoDatePicker").value();
        var formattedStayValidTo = kendo.toString(stayValidTo, "yyyy-MM-ddTHH:mm:ss");
        var note = $("#note").val();
        var reasonForStay = $("#reasonforstay").data("kendoDropDownList").value();
        var arrivalType = $("#arrivaltype").data("kendoDropDownList").value();
        var serviceType = $("#servicetype").data("kendoDropDownList").value();
        var checkInDate = $("#checkin").data("kendoDateTimePicker").value();
        console.log("Type of checkInDate:", typeof checkInDate);
        console.log("Value of checkInDate:", checkInDate);
        var formattedCheckInDate = kendo.toString(checkInDate, "yyyy-MM-ddTHH:mm:ss");
        console.log("Formatted CheckInDate:", formattedCheckInDate);
        var plannedCheckOutDate = $("#plannedcheckout").data("kendoDatePicker").value();
        var formattedPlannedCheckOutDate = kendo.toString(plannedCheckOutDate, "yyyy-MM-ddTHH:mm:ss");
        var discountReason = $("#discountreason").data("kendoDropDownList").value();

        newGuestDto.PropertyId = propertyId;
        newGuestDto.IsDomestic = isDomestic;
        newGuestDto.FirstName = firstName;
        newGuestDto.LastName = lastName;
        newGuestDto.PersonalNumber = personalNumber;
        newGuestDto.BirthDate = formattedBirthDate;
        newGuestDto.Gender = gender;
        newGuestDto.NationalityIso3 = nationality.Param2;
        newGuestDto.BirthPlaceName = birthPlace;
        newGuestDto.BirthCountryIso3 = birthCountry.Param2;
        newGuestDto.ResidencePlaceCode = residencePlace.ExternalId;
        newGuestDto.ResidencePlaceName = residencePlace.ExternalId ? residencePlace.Name : null;
        newGuestDto.ResidenceCountryIso3 = residenceCountry.Param2;
        newGuestDto.ResidenceMunicipalityCode = residenceMunicipality.ExternalId;
        newGuestDto.ResidenceMunicipalityName = residenceMunicipality.ExternalId ? residenceMunicipality.Name : null;
        newGuestDto.DocumentType = documentType;
        newGuestDto.DocumentNumber = documentNumber;
        newGuestDto.DocumentIssueDate = formattedDocumentIssueDate;
        newGuestDto.EntryDate = formattedEntryDate;
        newGuestDto.EntryPlace = entryPlace.ExternalId ? entryPlace.Name : null;
        newGuestDto.EntryPlaceCode = entryPlace.ExternalId;
        newGuestDto.VisaType = visaType;
        newGuestDto.VisaNumber = visaNumber;
        newGuestDto.VisaIssuingPlace = visaIssuingPlace;
        newGuestDto.StayValidTo = formattedStayValidTo;
        newGuestDto.Note = note;
        newGuestDto.ReasonForStay = reasonForStay;
        newGuestDto.ArrivalType = arrivalType;
        newGuestDto.ServiceType = serviceType;
        newGuestDto.CheckIn = formattedCheckInDate;
        newGuestDto.PlannedCheckOut = formattedPlannedCheckOutDate;
        newGuestDto.DiscountReason = discountReason;
        newGuestDto.GroupId = '@ViewBag.GroupId';

        $.ajax({
            url: '@Url.Action("CreateSrbPerson", "Person")',
            type: 'POST',
            data: {
                newGuestDto: newGuestDto
            },
            success: function (data) {
                if (data.success) {
                    console.log("hi");
                    $("#wndNewGuest").data("kendoWindow").close();
                    $('#srbPersonGrid').data('kendoGrid').dataSource.read();
                } else {
                    if (data.errors) {
                        var errorMessages = data.errors.map(function (v) {
                            return v.Error;
                        }).join('<br>');

                        Swal.fire({
                            icon: 'error',
                            title: 'Validaciona greška',
                            html: errorMessages,
                            footer: 'Molimo provjerite formu zbog grešaka.'
                        });
                    }
                    else {
                        alert("Došlo je do greške.");
                    }
                }
            },
            error: function () {
                alert("Došlo je do greške.");
            }
        });
    }

    function showGuest(event) {
        var grid = $("#srbPersonGrid").data("kendoGrid");

        // Check if any row is selected
        if (!grid.select().length) {
            // If no row is selected, show an error message using SweetAlert
            Swal.fire({
                icon: 'error',
                title: 'Greška',
                text: 'Morate odabrati gosta.',
            });
            return;
        }

        var dataItem = grid.dataItem(grid.select());

        var wnd = $("#wndNewGuest").data("kendoWindow");

        // Attach an event handler to the open event
        wnd.one("open", function () {

            toggleElements(dataItem.IsDomestic);

            // Use a setTimeout to make sure the code runs after the window is fully open
            setTimeout(function () {
                // Use jQuery selectors to directly access the elements within the window content
                $("#property").data("kendoDropDownList").value(dataItem.PropertyId);
                $("#isdomestic").data("kendoDropDownList").value(dataItem.IsDomestic);
                $("#firstname").val(dataItem.FirstName);
                $("#lastname").val(dataItem.LastName);
                $("#personalnumber").val(dataItem.PersonalNumber);
                $("#birthdate").data("kendoDatePicker").value(dataItem.BirthDate);
                $("#gender").data("kendoDropDownList").value(dataItem.Gender);
                $("#nationality").data("kendoDropDownList").value(dataItem.NationalityExternalId);
                $("#birthplace").val(dataItem.BirthPlaceName);
                $("#birthCountry").data("kendoDropDownList").value(dataItem.BirthCountryExternalId);
                $("#residencePlace").data("kendoDropDownList").value(dataItem.ResidencePlaceCode);
                $("#residenceCountry").data("kendoDropDownList").value(dataItem.ResidenceCountryExternalId);
                $("#residenceMunicipality").data("kendoDropDownList").value(dataItem.ResidenceMunicipalityCode);
                $("#documenttype").data("kendoDropDownList").value(dataItem.DocumentType);
                $("#documentnumber").val(dataItem.DocumentNumber);
                $("#documentissuedate").data("kendoDatePicker").value(dataItem.DocumentIssueDate);
                $("#entrydate").data("kendoDatePicker").value(dataItem.EntryDate);
                $("#entryplace").data("kendoDropDownList").value(dataItem.EntryPlace);
                $("#visatype").data("kendoDropDownList").value(dataItem.VisaType);
                $("#visanumber").val(dataItem.VisaNumber);
                $("#visaissueplace").val(dataItem.VisaIssuingPlace);
                $("#stayvalidto").data("kendoDatePicker").value(dataItem.StayValidTo);
                $("#note").val(dataItem.Note);
                $("#reasonforstay").data("kendoDropDownList").value(dataItem.ReasonForStay);
                $("#arrivaltype").data("kendoDropDownList").value(dataItem.ArrivalType);
                $("#servicetype").data("kendoDropDownList").value(dataItem.ServiceType);
                $("#checkin").data("kendoDateTimePicker").value(dataItem.CheckIn);
                $("#plannedcheckout").data("kendoDatePicker").value(dataItem.PlannedCheckOut);
                $("#discountreason").data("kendoDropDownList").value(dataItem.ResidenceTaxDiscountReason);
            }, 100);
        });

        // Attach an event handler to the close event

        wnd.center().open();
    }

    // Function to show/hide and enable/disable elements based on isdomestic value
    function toggleElements(isDomesticValue) {
        if (isDomesticValue === "false" || isDomesticValue == false) {
            $("#secondFieldset").show();
            $("#secondFieldset :input").prop("disabled", false);

            // Additional logic for Strani gost
            setTimeout(function () {
                hideKendoWidgets(["personalnumber", "residenceCountry", "residenceMunicipality", "residencePlace"]);
                hideContainers(["personalnumber", "residenceCountry", "residenceMunicipality", "residencePlace"]);
                showKendoWidgets(["birthPlace", "nationality"]);
                showContainers(["birthPlace", "nationality"]);
            }, 100); // Delay execution to ensure proper initialization
        } else {
            $("#secondFieldset").hide();
            $("#secondFieldset :input").prop("disabled", true);

            // Additional logic for Domaći gost
            showKendoWidgets(["personalnumber", "residenceCountry", "residenceMunicipality", "residencePlace"]);
            showContainers(["personalnumber", "residenceCountry", "residenceMunicipality", "residencePlace"]);
            hideKendoWidgets(["birthPlace", "nationality"]);
            hideContainers(["birthPlace", "nationality"]);
        }
    }

    // Function to hide Kendo widgets
    function hideKendoWidgets(ids) {
        ids.forEach(function (id) {
            var widget = $("#" + id).getKendoDropDownList() || $("#" + id).getKendoDatePicker() || $("#" + id).getKendoTextBox();
            if (widget) {
                widget.value(null);
                widget.wrapper.hide();
            } else {
                $("#" + id).hide();
            }
        });
    }

    // Function to show Kendo widgets
    function showKendoWidgets(ids) {
        ids.forEach(function (id) {
            var widget = $("#" + id).getKendoDropDownList() || $("#" + id).getKendoDatePicker() || $("#" + id).getKendoTextBox();
            if (widget) {
                widget.wrapper.show();
            } else {
                $("#" + id).show();
            }
        });
    }

    // Function to hide containers
    function hideContainers(ids) {
        ids.forEach(function (id) {
            $("#" + id + "-container").hide();
        });
    }

    // Function to show containers
    function showContainers(ids) {
        ids.forEach(function (id) {
            $("#" + id + "-container").show();
        });
    }

    function deleteGuest(e) {
        var grid = $('#srbPersonGrid').data('kendoGrid');
        var item = grid.dataItem(grid.select());

        if (item == null) {
            Swal.fire({ icon: 'error', title: 'Morate odabrati prijavu', confirmButtonText: `U redu` });
        } else {
            Swal.fire({
                title: 'Da li ste sigurni?',
                text: 'Ova radnja je nepovratna!',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Da, obriši!',
                cancelButtonText: 'Odustani'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Content("~/Person/DeleteSrbPerson/")',
                        data: { guestId: item.Id },
                        type: 'GET',
                        success: function (data, status, xhr) {
                            if (data.error != "") {
                                Swal.fire({ icon: 'error', title: data.error, confirmButtonText: `U redu` });
                            }
                            if (data.info != "") {
                                grid.dataSource.read();
                                Swal.fire({ icon: 'info', title: data.info, confirmButtonText: `U redu` });
                            }
                        },
                        error: function () {
                            Swal.fire({ icon: 'error', title: 'Došlo je do greške prilikom brisanja grupe.', confirmButtonText: `U redu` });
                        }
                    });
                }
            });
        }
    }

</script>

<style type="text/css">
    .box {
        padding-right: 0px;
        padding-left: 5px;
        padding-top: 10px;
        padding-bottom: 10px;
        padding-top: 0px;
        display: inline-block;
    }

    #prijavaForm label {
        display: block
    }

    .k-textbox input {
        border: 0px !important;
    }

    label {
        font-weight: normal;
    }

    .mribbon {
        padding-bottom: 0px;
        background-color: #4d6aa3;
    }

</style>

<div>
    <div style="display:inline-block; float:left; margin-top:10px;">
        <div style="display: inline-block; margin-right: 35px; margin-left:20px; text-align:center;">
            @(Html.Kendo().Button().Name("btnNewGuest")
                .Content("<img style='width:52px;height:52px;text-align:center; position:relative; top:-1px; left:1px;' src='/Content/Icons/new_contact_plus.png'></img>")
                .HtmlAttributes(new { style = "width:80px; height:80px; border-radius:50%;" })
                )
            <div style="margin-top:3px;"><b>Novi gost</b></div>
        </div>
        <div style="display: inline-block; margin-right: 35px; text-align:center;">
            @(Html.Kendo().Button().Name("btnOpenGuest")
                .Content("<img style='width:52px;height:52px;text-align:center; position:relative; top:-2px; left:2px;' src='/Content/Icons/view_glass.png'></img>")
                .HtmlAttributes(new { onclick = "showGuest(event)", style = "width:80px; height:80px; border-radius:50%;" })
                )
            <div style="margin-top:3px;"><b>Prikaži detalje gosta</b></div>
        </div>
        <div style="display: inline-block; margin-right: 35px; text-align:center;">
            @(Html.Kendo().Button().Name("btnDeleteGuest")
                .Content("<img style='width:58px;height:58px;text-align:center; position:relative; top:-1px;' src='/Content/Icons/remove.png'></img>")
                .HtmlAttributes(new { onclick = "deleteGuest(event)", style = "width:80px; height:80px; border-radius:50%;" })
                )
            <div style="margin-top:3px;"><b>Obriši gosta</b></div>
        </div>
    </div>

</div>

<div style="position:absolute; top:130px; bottom: 15px; left: 15px; right:15px;">
    @(Html.Kendo().Grid<SrbPersonEnrichedDto>()
        .Name("srbPersonGrid")
        .Columns(columns =>
        {
            // First Level Header
            columns.Group(group => group
            .Title("Boravak")
            .HeaderHtmlAttributes(new { style = "text-align: center;" })
            .Columns(col =>
            {
                col.Bound(g => g.FullName).Title("Ime i prezime").Width(250);
                col.Bound(g => g.PropertyName).Title("Smještajni objekat").Width(250);
                col.Bound(g => g.IsDomestic).Title("Tip gosta").Width(250).ClientTemplate("#= IsDomestic ? 'Domaći gost' : 'Strani gost' #");
                col.Bound(g => g.CheckIn).Title("Prijava").Format("{0:dd.MM.yyyy}").Width(100);
                col.Bound(g => g.CheckOut).Title("Odjava").Format("{0:dd.MM.yyyy}").Width(100);
            })
            );

            // Second Level Header
            columns.Group(group => group
            .Title("Lični dokument")
            .HeaderHtmlAttributes(new { style = "text-align: center;" })
            .Columns(col =>
            {
                col.Bound(g => g.DocumentType).Title("Vrsta").Width(150);
                col.Bound(g => g.DocumentNumber).Title("Broj").Width(100);
                col.Bound(g => g.DocumentIssueDate).Title("Datum izdavanja").Format("{0:dd.MM.yyyy}").Width(100);
            })
            );

            // Third Level Header (Status)
            columns.Group(group => group
            .Title("Status")
            .HeaderHtmlAttributes(new { style = "text-align: center;" })
            .Columns(col =>
            {
                // Display boolean fields as non-clickable checkboxes using Kendo UI elements
                col.Bound(g => g.Registered).Title("Prijavljen").Width(100).ClientTemplate("#= Registered ? '<span class=\"k-checkbox k-checkbox-disabled\"><input type=\"checkbox\" checked disabled=\"disabled\" /><label class=\"k-checkbox-label\" style=\"pointer-events: none;\"></label></span>' : '<span class=\"k-checkbox k-checkbox-disabled\"><input type=\"checkbox\" disabled=\"disabled\" /><label class=\"k-checkbox-label\" style=\"pointer-events: none;\"></label></span>' #");
                col.Bound(g => g.Locked).Title("Zaključan").Width(100).ClientTemplate("#= Locked ? '<span class=\"k-checkbox k-checkbox-disabled\"><input type=\"checkbox\" checked disabled=\"disabled\" /><label class=\"k-checkbox-label\" style=\"pointer-events: none;\"></label></span>' : '<span class=\"k-checkbox k-checkbox-disabled\"><input type=\"checkbox\" disabled=\"disabled\" /><label class=\"k-checkbox-label\" style=\"pointer-events: none;\"></label></span>' #");
                col.Bound(g => g.Deleted).Title("Obrisan").Width(100).ClientTemplate("#= Deleted ? '<span class=\"k-checkbox k-checkbox-disabled\"><input type=\"checkbox\" checked disabled=\"disabled\" /><label class=\"k-checkbox-label\" style=\"pointer-events: none;\"></label></span>' : '<span class=\"k-checkbox k-checkbox-disabled\"><input type=\"checkbox\" disabled=\"disabled\" /><label class=\"k-checkbox-label\" style=\"pointer-events: none;\"></label></span>' #");
            })
            );
        })
        .Pageable(p => p.Refresh(true))
        .Sortable()
        .Selectable()
        .Scrollable()
        .HtmlAttributes(new { style = "height:100%;" })
        .DataSource(ds => ds
        .Ajax()
        .PageSize(20)
        .Model(m =>
        {
            m.Field(g => g.Id);
            m.Field(g => g.FullName);
            m.Field(g => g.PropertyName);
            m.Field(g => g.IsDomestic);
            m.Field(g => g.CheckIn);
            m.Field(g => g.CheckOut);
            m.Field(g => g.DocumentType);
            m.Field(g => g.DocumentNumber);
            m.Field(g => g.DocumentIssueDate);
            m.Field(g => g.Registered);
            m.Field(g => g.Locked);
            m.Field(g => g.Deleted);
        })
        .Read(read => read.Action("ReadSrbPersons", "Person").Data("function() { return { groupId: " + ViewBag.GroupId + " }; }"))
        ))
</div>

@(Html.Kendo().Window().Name("wndNewGuest")
    .Title("Nova prijava")
    .Visible(false)
    .Modal(true)
    .Draggable(false)
    .Width(1200)
    .Height(900)
    .HtmlAttributes(new { style = "padding:20px;" })
    .Content(@<text>
    <div id="newGuestForm">
                <div class="box">
            <label for="isdomestic">Tip gosta<span style="color: red;">*</span></label>
                    @(Html.Kendo().DropDownList()
                    .Name("isdomestic")
                    .DataTextField("Text")
                    .DataValueField("Value")
                    .OptionLabel("Izaberite tip gosta")
                    .BindTo(new List<SelectListItem>
                    {
                        new SelectListItem { Text = "Strani gost", Value = "false" },
                        new SelectListItem { Text = "Domaći gost", Value = "true" }
                    })
                    .Value("false")
                    .HtmlAttributes(new { style = "width:100%" })
                    )
                </div>
        <fieldset style="border: 1px solid #ddd; padding: 10px; margin-bottom: 10px;">
            <div class="form-group">
                <div class="box">
                    <label for="firstname">Ime <span style="color: red;">*</span></label>
                    @(Html.Kendo().TextBox()
                    .Name("firstname")
                    .HtmlAttributes(new { style = "width:100%" })
                    )
                </div>
                <div class="box">
                    <label for="lastname">Prezime <span style="color: red;">*</span></label>
                    @(Html.Kendo().TextBox()
                    .Name("lastname")
                    .HtmlAttributes(new { style = "width:100%" })
                    )
                </div>
                <div class="box">
                    <label for="birthdate">Datum rođenja</label>
                    @(Html.Kendo().DatePicker()
                    .Name("birthdate")
                    .HtmlAttributes(new { style = "width:100%" })
                    )
                </div>
                <div class="box">
                    <label for="gender">Pol <span style="color: red;">*</span></label>
                    @(Html.Kendo().DropDownList()
                    .Name("gender")
                    .DataTextField("Text")
                    .DataValueField("Value")
                    .OptionLabel("Izaberite pol")
                    .BindTo(new List<SelectListItem>
                    {
                    new SelectListItem { Text = "Muški", Value = "M" },
                    new SelectListItem { Text = "Ženski", Value = "Z" }
                    })
                    .Value("M") // Set the initial value to "M" for Muški
                    .HtmlAttributes(new { style = "width:100%" })
                    )
                </div>
                <div class="box" id="personalnumber-container">
                    <label for="personalnumber">JMBG <span style="color: red;">*</span></label>
                    @(Html.Kendo().TextBox()
                    .Name("personalnumber")
                    .HtmlAttributes(new { style = "width:100%" })
                    )
                </div>
                <div class="box">
                    <label for="birthCountry">Država rođenja <span style="color: red;">*</span></label>
                    @(Html.Kendo().DropDownList()
                    .Name("birthCountry")
                    .DataTextField("Name")
                    .DataValueField("ExternalId")
                    .OptionLabel("Izaberite državu rođenja")
                    .BindTo(Model.CountryCodeList)
                    .Filter("contains")
                    .HtmlAttributes(new { style = "width:100%" })
                    )
                </div>
                <div class="box" id="residenceCountry-container">
                    <label for="residenceCountry">Država prebivališta <span style="color: red;">*</span></label>
                    @(Html.Kendo().DropDownList()
                    .Name("residenceCountry")
                    .DataTextField("Name")
                    .DataValueField("ExternalId")
                    .OptionLabel("Izaberite državu prebivališta")
                    .BindTo(Model.CountryCodeList)
                    .Filter("contains")
                    .HtmlAttributes(new { style = "width:100%" })
                    )
                </div>
                <div class="box" id="residenceMunicipality-container">
                    <label for="residenceMunicipality">Opština prebivališta</label>
                    @(Html.Kendo().DropDownList()
                    .Name("residenceMunicipality")
                    .DataTextField("Name")
                    .DataValueField("ExternalId")
                    .OptionLabel("Izaberite opštinu prebivališta")
                    .Enable(false)
                    .Filter("contains")
                    .HtmlAttributes(new { style = "width:100%" })
                    .Value(null)
                    )
                </div>
                <div class="box" id="residencePlace-container">
                    <label for="residencePlace">Mesto prebivališta </label>
                    @(Html.Kendo().DropDownList()
                    .Name("residencePlace")
                    .DataTextField("Name")
                    .DataValueField("ExternalId")
                    .OptionLabel("Izaberite mesto prebivališta")
                    .Enable(false)
                    .Filter("contains")
                    .HtmlAttributes(new { style = "width:100%" })
                    .Value(null)
                    )
                </div>
                <div class="box" id="birthPlace-container">
                    <label for="birthPlace">Mesto rođenja </label>
                    @(Html.Kendo().DropDownList()
                    .Name("birthPlace")
                    .DataTextField("Name")
                    .DataValueField("ExternalId")
                    .OptionLabel("Izaberite mesto rođenja")
                    .BindTo(Model.PlaceCodeList)
                    .Filter("contains")
                    .HtmlAttributes(new { style = "width:100%" })
                    )
                </div>
                <div class="box" id="nationality-container">
                    <label for="nationality">Nacionalnost <span style="color: red;">*</span></label>
                    @(Html.Kendo().DropDownList()
                    .Name("nationality")
                    .DataTextField("Name")
                    .DataValueField("ExternalId")
                    .OptionLabel("Izaberite nacionalnost")
                    .BindTo(Model.CountryCodeList)
                    .Filter("contains") // Set the filter type to "contains" for client-side filtering
                    .HtmlAttributes(new { style = "width:100%" })
                    )
                </div>
            </div>
@*             <div class="form-group">
                <div class="box">
                    <label for="birthplace">Mjesto rođenja <span style="color: red;">*</span></label>
                    @(Html.Kendo().TextBox()
                    .Name("birthplace")
                    .Value("-")
                    .HtmlAttributes(new { style = "width:100%" })
                    )
                </div>
            </div> *@
        </fieldset>
        <fieldset style="border: 1px solid #ddd; padding: 10px; margin-bottom: 10px; display:none;" id="secondFieldset">
            <div class="form-group">
                <div class="box">
                    <label for="documenttype">Vrsta putne isprave<span style="color: red;">*</span>
                    </label>
                    @(Html.Kendo().DropDownList()
                    .Name("documenttype")
                    .DataTextField("Name")
                    .DataValueField("ExternalId")
                    .OptionLabel("Izaberite vrstu putne isprave")
                    .BindTo(Model.DocumentTypeCodeList)
                    .HtmlAttributes(new { style = "width:100%" })
                    )
                </div>
                <div class="box">
                    <label for="documentnumber">Broj putne isprave <span style="color: red;">*</span></label>
                    @(Html.Kendo().TextBox()
                    .Name("documentnumber")
                    .HtmlAttributes(new { style = "width:100%" })
                    )
                </div>
                <div class="box">
                    <label for="documentissuedate">Datum izdavanja<span style="color: red;">*</span></label>
                    @(Html.Kendo().DatePicker()
                    .Name("documentissuedate")
                    .HtmlAttributes(new { style = "width:100%" })
                    )
                </div>
                <div class="box">
                    <label for="entrydate">Datum ulaska u R.Srbiju<span style="color: red;">*</span>
                    </label>
                    @(Html.Kendo().DatePicker()
                    .Name("entrydate")
                    .Value(DateTime.UtcNow)
                    .HtmlAttributes(new { style = "width:100%" })
                    )
                </div>
                <div class="box">
                    <label for="entryplace">Mesto ulaska u R.Srbiju <span style="color: red;">*</span>
                    </label>
                    @(Html.Kendo().DropDownList()
                    .Name("entryplace")
                    .DataTextField("Name")
                    .DataValueField("ExternalId")
                    .OptionLabel("Izaberite mesto ulaska u R.Srbiju")
                    .BindTo(Model.EntryPointCodeList)
                    .Filter("contains")
                    .HtmlAttributes(new { style = "width:100%" })
                    .Value(null)
                    )
                </div>
                <div class="box">
                    <label for="visatype">Vrsta vize</label>
                    @(Html.Kendo().DropDownList()
                    .Name("visatype")
                    .DataTextField("Name")
                    .DataValueField("ExternalId")
                    .OptionLabel("Izaberite vrstu vize")
                    .BindTo(Model.VisaTypeCodeList)
                    .HtmlAttributes(new { style = "width:100%" })
                    )
                </div>
                <div class="box">
                    <label for="visanumber">Broj vize</label>
                    @(Html.Kendo().TextBox()
                    .Name("visanumber")
                    .Enable(false)
                    .HtmlAttributes(new { style = "width:100%" })
                    )
                </div>
                <div class="box">
                    <label for="visaissueplace">Mesto izdavanja vize</label>
                    @(Html.Kendo().TextBox()
                    .Name("visaissueplace")
                    .Enable(false)
                    .HtmlAttributes(new { style = "width:100%" })
                    )
                </div>
                <div class="box">
                    <label for="stayvalidto">Boravak odobren do</label>
                    @(Html.Kendo().DatePicker()
                    .Name("stayvalidto")
                    .HtmlAttributes(new { style = "width:100%" })
                    )
                </div>
                <div class="box">
                    <label for="note">Napomena</label>
                    @(Html.Kendo().TextBox()
                    .Name("note")
                    .HtmlAttributes(new { style = "width:100%" })
                    )
                </div>
            </div>
        </fieldset>
        <fieldset style="border: 1px solid #ddd; padding: 10px; margin-bottom: 10px;">
            <div class="form-group">
                <div class="box">
                    <label for="property">Ugostiteljski objekat<span style="color: red;"></label>
                    @(Html.Kendo().DropDownList()
                    .Name("property")
                    .DataTextField("Name")
                    .DataValueField("Id")
                    .OptionLabel("Izaberite ugostiteljski objekat")
                    .DataSource(source => source.Read(read => read.Action("GetPropertyList", "Group")))
                    .Value(ViewBag.PropertyId != null ? ViewBag.PropertyId.ToString() : "") // Set the initial value based on ViewBag.PropertyId
                    .HtmlAttributes(new { style = "width:100%" })
                    )
                </div>
                <div class="box">
                    <label for="servicetype">Vrsta usluge<span style="color: red;"></label>
                    @(Html.Kendo().DropDownList()
                    .Name("servicetype")
                    .DataTextField("Name")
                    .DataValueField("ExternalId")
                    .OptionLabel("Izaberite vrstu usluge")
                    .BindTo(Model.ServiceTypeCodeList)
                    .Value("1")
                    .HtmlAttributes(new { style = "width:100%" })
                    )
                </div>
                <div class="box">
                    <label for="arrivaltype">Način dolaska<span style="color: red;"></label>
                    @(Html.Kendo().DropDownList()
                    .Name("arrivaltype")
                    .DataTextField("Name")
                    .DataValueField("ExternalId")
                    .OptionLabel("Izaberite način dolaska")
                    .BindTo(Model.ArrivalTypeCodeList)
                    .Value("1")
                    .HtmlAttributes(new { style = "width:100%" })
                    )
                </div>
                <div class="box">
                    <label for="reasonforstay">Razlog boravka<span style="color: red;"></label>
                    @(Html.Kendo().DropDownList()
                    .Name("reasonforstay")
                    .DataTextField("Name")
                    .DataValueField("ExternalId")
                    .OptionLabel("Izaberite razlog boravka")
                    .BindTo(Model.ReasonForStayCodeList)
                    .Value("4")
                    .HtmlAttributes(new { style = "width:100%" })
                    )
                </div>
                <div class="box">
                    <label for="checkin">Datum i vreme dolaska<span style="color: red;">*</span></label>
                    @(Html.Kendo().DateTimePicker()
                    .Name("checkin")
                    .Value((DateTime?)ViewBag.CheckIn)
                    .HtmlAttributes(new { style = "width:100%" })
                    )
                </div>
                <div class="box" id="plannedcheckout-container">
                    <label for="plannedcheckout">Planirani datum odlaska<span style="color: red;">*</span></label>
                    @(Html.Kendo().DatePicker()
                    .Name("plannedcheckout")
                    .HtmlAttributes(new { style = "width:100%" })
                    )
                </div>
                <div class="box">
                    <label for="discountreason">Umanjenje/Oslobađanje boravišne takse</label>
                    @(Html.Kendo().DropDownList()
                    .Name("discountreason")
                    .DataTextField("Name")
                    .DataValueField("ExternalId")
                    .OptionLabel("Izaberite razlog umanjenja/oslobađanja boravišne takse")
                    .BindTo(Model.DiscountReasonCodeList)
                    .HtmlAttributes(new { style = "width:100%" })
                    )
                </div>
            </div>
        </fieldset>

        <!-- Buttons -->
        <div style="display:inline-block; float:left; margin-top:10px;">
            <div style="display: inline-block; margin-right: 35px; margin-left:20px; text-align:center;">
                @(Html.Kendo().Button().Name("btnSubmitNewGuest")
                .Content("<img style='width:52px;height:52px;text-align:center; position:relative; top:-3px;' src='/Content/Icons/user_group_new.png'></img>")
                .HtmlAttributes(new { style = "width:80px; height:80px; border-radius:50%; margin-top: 10px;" })
                )
                <div style="margin-top:3px;"><b>Nova prijava</b></div>
            </div>
        </div>
    </div>
</text>)
)