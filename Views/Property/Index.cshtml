@using Oblak.Models.Api;
@using Oblak.Models.rb90;
@{
    ViewBag.Title = "Smještajni objekti";
    Layout = "~/Views/Shared/_LayoutINV.cshtml";
    var sl = ViewBag.MunicipalityCodeList as SelectList;
    var tl = ViewBag.TypeCodeList as SelectList;
}

<script type="text/javascript">
    $(document).ready(function () {

    });

    function onCancel(e) {
        var grid = e.sender;
        grid.dataSource.cancelChanges();
        grid.dataSource.read();
    }

    function onBtnLoadObjectsClick() {
        $.ajax({
            url: '/Property/FetchPropertiesExternal',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Smještajni objekti su uspješno preuzeti.',
                        confirmButtonText: 'U redu'
                    });
                    var grid = $("#propertiesGrid").data("kendoGrid");
                    if (grid) {
                        grid.dataSource.read();
                        grid.refresh();
                    }
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Došlo je do greške prilikom preuzimanja smještajnih objekata.',
                        confirmButtonText: 'U redu'
                    });
                }
            },
            error: function (error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Došlo je do greške prilikom preuzimanja smještajnih objekata.',
                    confirmButtonText: 'U redu'
                });
            }
        });
    }

    function grid_error(e) {
        if (e.errors) {
            var message = "There are some errors:\n";
            // Create a message containing all errors.
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            // Display the message.
            alert(message);
            // Cancel the changes.
            var grid = $("#grid").data("kendoGrid");
            grid.cancelChanges();
        }
    }
</script>

<div>
    <div style="display: inline-block; margin-right: 35px; margin-left:20px; margin-top:10px; text-align:center;">
        @(Html.Kendo().Button()
            .Name("btnLoadObjects")
            .Content("<img style='width:52px;height:52px;text-align:center; position:relative; top:-3px;' src='/Content/Icons/real_estate.png'></img>")
            .HtmlAttributes(new { style = "width:80px; height:80px; border-radius:50%;" })
            .Events(events => events
            .Click("onBtnLoadObjectsClick")
            )
            )
        <div style="display:inline-block; text-align: left; margin-left:10px;"><b>Preuzmi prijavljene smještajne<br />objekte iz MUP-a</b></div>
    </div>
</div>

<div style="position:absolute; top:130px; bottom: 15px; left: 15px; right:15px;">
    @(Html.Kendo().Grid<PropertyEnrichedDto>()
        .Name("propertiesGrid")
        .Columns(columns =>
        {
            columns.Command(command => { 
                command.Edit().Text(" ").UpdateText(" ").CancelText(" "); 
                command.Destroy().Text(" "); 
            })
            .Width(70);

            columns.Group(group => group
            .Title("MUP")
            .HeaderHtmlAttributes(new { style = "text-align: center;" })
            .Columns(col =>
            {
                col.Bound(g => g.Id).Title("ID").Width(100).ClientTemplate("#= Id #").HtmlAttributes(new { style = "pointer-events:none;" });
                col.Bound(g => g.RegNumber).Title("Reg. broj").Width(100);
                col.Bound(g => g.RegDate).Title("Rješenje ističe").Width(100);
                col.Bound(g => g.Name).Title("Naziv").Width(100);
            })
            );

            columns.Group(group => group
            .Title("Osnovni podaci")
            .HeaderHtmlAttributes(new { style = "text-align: center;" })
            .Columns(col =>
            {
                @* col.Bound(g => g.PropertyName).Title("Naziv objekta").Width(100); *@
                col.Bound(g => g.Address).Title("Adresa").Width(100);
                col.ForeignKey(g => g.Type, tl).Title("Vrsta").Width(100);
                col.Bound(g => g.ExternalId).Title("Šifra").Width(100);
                col.ForeignKey(g => g.Municipality, sl).Title("Opština").Width(100);
            })
            );

            columns.Group(group => group
            .Title("Izdavanje")
            .HeaderHtmlAttributes(new { style = "text-align: center;" })
            .Columns(col =>
            {
                @* col.Bound(g => g.PaymentType).Title("Naplata").Width(100); *@
                col.Bound(g => g.Price).Title("Cijena").Width(100);
                col.Bound(g => g.Capacity).Title("Kapacitet").Width(100);
            })
            );

            columns.Group(group => group
            .Title("Boravišna taksa")
            .HeaderHtmlAttributes(new { style = "text-align: center;" })
            .Columns(col =>
            {
                col.Bound(g => g.ResidenceTax).Title("Iznos").Width(100);
                col.Bound(g => g.ResidenceTaxYN).Title("Naplata BT?").Width(100).ClientTemplate("#= ResidenceTaxYN ? '<span class=\"k-checkbox k-checkbox-disabled\"><input type=\"checkbox\" checked disabled=\"disabled\" /><label class=\"k-checkbox-label\" style=\"pointer-events: none;\"></label></span>' : '<span class=\"k-checkbox k-checkbox-disabled\"><input type=\"checkbox\" disabled=\"disabled\" /><label class=\"k-checkbox-label\" style=\"pointer-events: none;\"></label></span>' #"); ;
            })
            );
        })
        .Pageable(p => p.Refresh(true))
        .Sortable()
        .Selectable()
        .Scrollable()
        .Filterable()
        .HtmlAttributes(new { style = "height:70%;" })
        .Editable(editable => editable.Mode(GridEditMode.InLine))
        .Events(e => e.Cancel("onCancel"))
        .DataSource(ds => ds
            .Ajax()
            .Events(events => events.Error("grid_error"))
            .PageSize(20)
            .Model(m =>
            {
                m.Id(g => g.Id);
                m.Field(g => g.Id);
                m.Field(g => g.RegNumber);
                m.Field(g => g.RegDate);
                m.Field(g => g.Name);
                m.Field(g => g.PropertyName);
                m.Field(g => g.Address);
                m.Field(g => g.Municipality);
                m.Field(g => g.PaymentType);
                m.Field(g => g.Price);
                m.Field(g => g.Capacity);
                m.Field(g => g.ResidenceTax);
                m.Field(g => g.ResidenceTaxYN);
            })
            .Read(read => read.Action("Read", "Property"))
            .Update(update => update.Action("Update", "Property"))
            .Destroy(destroy => destroy.Action("Destroy", "Property"))
        ))
</div>